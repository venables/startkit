diff --git a/node_modules/jsx-email/dist/index.js b/node_modules/jsx-email/dist/index.js
index 7e2573e..9336abe 100644
--- a/node_modules/jsx-email/dist/index.js
+++ b/node_modules/jsx-email/dist/index.js
@@ -554,12 +554,12 @@ __name(isReactForwardRef, "isReactForwardRef");
 var import_jsx_runtime3 = require("react/jsx-runtime");
 var debugProps3 = debug.elements.enabled ? { dataType: "jsx-email/code" } : {};
 var getHighlighter = (0, import_p_memoize.default)(async (language, theme = "nord") => {
-  const { getHighlighter: getHighBro } = await import("shikiji");
-  const shiki = await getHighBro({
-    langs: language ? [language] : [],
-    themes: [theme]
-  });
-  return shiki;
+  // const { getHighlighter: getHighBro } = await import("shikiji");
+  // const shiki = await getHighBro({
+  //   langs: language ? [language] : [],
+  //   themes: [theme]
+  // });
+  // return shiki;
 });
 var Renderer = /* @__PURE__ */ __name((props) => {
   const { children, language, style, theme = "nord", ...rest } = props;
@@ -1066,7 +1066,7 @@ Text.displayName = "Text";
 var import_html_to_text = require("html-to-text");
 
 // src/render/process.ts
-var import_minify_preset = require("@jsx-email/minify-preset");
+// var import_minify_preset = require("@jsx-email/minify-preset");
 var import_pretty = __toESM(require("pretty"));
 var jsxEmailTags = ["jsx-email-cond"];
 var processHtml = /* @__PURE__ */ __name(async ({ html, minify, pretty }) => {
@@ -1101,10 +1101,10 @@ var processHtml = /* @__PURE__ */ __name(async ({ html, minify, pretty }) => {
   }
   __name(rehypeMoveStyle, "rehypeMoveStyle");
   let processor = rehype().data("settings", settings).use(rehypeMoveStyle);
-  if (minify) {
-    const preset = await (0, import_minify_preset.minifyPreset)();
-    processor = processor.use(preset);
-  }
+  // if (minify) {
+  //   const preset = await (0, import_minify_preset.minifyPreset)();
+  //   processor = processor.use(preset);
+  // }
   const doc = await processor.use(stringify, {
     allowDangerousCharacters: true,
     allowDangerousHtml: true,
diff --git a/node_modules/jsx-email/dist/index.mjs b/node_modules/jsx-email/dist/index.mjs
index d703a5c..94ba50f 100644
--- a/node_modules/jsx-email/dist/index.mjs
+++ b/node_modules/jsx-email/dist/index.mjs
@@ -490,12 +490,12 @@ __name(isReactForwardRef, "isReactForwardRef");
 import { Fragment, jsx as jsx3 } from "react/jsx-runtime";
 var debugProps3 = debug.elements.enabled ? { dataType: "jsx-email/code" } : {};
 var getHighlighter = mem(async (language, theme = "nord") => {
-  const { getHighlighter: getHighBro } = await import("shikiji");
-  const shiki = await getHighBro({
-    langs: language ? [language] : [],
-    themes: [theme]
-  });
-  return shiki;
+  // const { getHighlighter: getHighBro } = await import("shikiji");
+  // const shiki = await getHighBro({
+  //   langs: language ? [language] : [],
+  //   themes: [theme]
+  // });
+  // return shiki;
 });
 var Renderer = /* @__PURE__ */ __name((props) => {
   const { children, language, style, theme = "nord", ...rest } = props;
@@ -1002,7 +1002,7 @@ Text.displayName = "Text";
 import { htmlToText } from "html-to-text";
 
 // src/render/process.ts
-import { minifyPreset } from "@jsx-email/minify-preset";
+// import { minifyPreset } from "@jsx-email/minify-preset";
 import prettyHtml from "pretty";
 var jsxEmailTags = ["jsx-email-cond"];
 var processHtml = /* @__PURE__ */ __name(async ({ html, minify, pretty }) => {
@@ -1037,10 +1037,10 @@ var processHtml = /* @__PURE__ */ __name(async ({ html, minify, pretty }) => {
   }
   __name(rehypeMoveStyle, "rehypeMoveStyle");
   let processor = rehype().data("settings", settings).use(rehypeMoveStyle);
-  if (minify) {
-    const preset = await minifyPreset();
-    processor = processor.use(preset);
-  }
+  // if (minify) {
+  //   const preset = await minifyPreset();
+  //   processor = processor.use(preset);
+  // }
   const doc = await processor.use(stringify, {
     allowDangerousCharacters: true,
     allowDangerousHtml: true,
